// <auto-generated />
using System;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.DbContexts.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20190519152040_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.Models.Account<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessibleAccountId");

                    b.Property<string>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("AccessibleAccounts");
                });

            modelBuilder.Entity("Infrastructure.Models.History<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessibleAccountName");

                    b.Property<int?>("Account<string>Id");

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("LoginDateTime");

                    b.Property<DateTime?>("LogoutDateTime");

                    b.Property<string>("OwnerName");

                    b.HasKey("Id");

                    b.HasIndex("Account<string>Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccessibleAccountsHistories");
                });

            modelBuilder.Entity("Infrastructure.Models.History<string>", b =>
                {
                    b.HasOne("Infrastructure.Models.Account<string>")
                        .WithMany("AccessHistories")
                        .HasForeignKey("Account<string>Id");

                    b.HasOne("Infrastructure.Models.Account<string>", "AccessibleAccount")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
